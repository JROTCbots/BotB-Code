{"mode":"Text","hardwareTarget":"brain","textContent":"#region VEXcode Generated Robot Configuration\nfrom vex import *\nimport urandom\n\n# Brain should be defined by default\nbrain=Brain()\n\n# Robot configuration code\narm_motor = Motor(Ports.PORT3, GearSetting.RATIO_18_1, False)\npusher_motor = Motor(Ports.PORT5, GearSetting.RATIO_18_1, False)\nleft_drive_smart = Motor(Ports.PORT1, GearSetting.RATIO_18_1, False)\nright_drive_smart = Motor(Ports.PORT2, GearSetting.RATIO_18_1, True)\ndrivetrain = DriveTrain(left_drive_smart, right_drive_smart, 319.19, 295, 40, MM, 1)\n\n\n# wait for rotation sensor to fully initialize\nwait(30, MSEC)\n\n\n# Make random actually random\ndef initializeRandomSeed():\n    wait(100, MSEC)\n    random = brain.battery.voltage(MV) + brain.battery.current(CurrentUnits.AMP) * 100 + brain.timer.system_high_res()\n    urandom.seed(int(random))\n      \n# Set random seed \ninitializeRandomSeed()\n\n\ndef play_vexcode_sound(sound_name):\n    # Helper to make playing sounds from the V5 in VEXcode easier and\n    # keeps the code cleaner by making it clear what is happening.\n    print(\"VEXPlaySound:\" + sound_name)\n    wait(5, MSEC)\n\n# add a small delay to make sure we don't print in the middle of the REPL header\nwait(200, MSEC)\n# clear the console to make sure we don't have the REPL in the console\nprint(\"\\033[2J\")\n\n#endregion VEXcode Generated Robot Configuration\n\n# ------------------------------------------\n# \n# \tProject:      VEXcode Project\n#\tAuthor:       VEX\n#\tCreated:\n#\tDescription:  VEXcode V5 Python Project\n# \n# ------------------------------------------\n\n# Library imports\nfrom vex import *\n\n# Begin project code\n\n\ndef Place_down_and_put_up_arm_motor():\n    arm_motor.spin_to_position(-60, DEGREES);\n    wait(1, SECONDS);\n    arm_motor.spin_to_position(450, DEGREES);\n    arm_motor.set_velocity(2000, PERCENT);\n    arm_motor.spin_to_position(450, DEGREES);\n    drivetrain.set_drive_velocity(125, PERCENT);\n    # prepping for the autonomous ^\n    drivetrain.drive_for(FORWARD, 14.5, INCHES);\n    drivetrain.set_turn_velocity(125, PERCENT);\n    drivetrain.turn_for(RIGHT, 90, DEGREES);\n    drivetrain.drive_for(FORWARD, 9.5, INCHES);\n    pusher_motor.set_velocity(2000, PERCENT);\n    pusher_motor.spin_for(FORWARD, 1200, DEGREES);\n    # scores 3 points (Top ring)\n    drivetrain.drive_for(REVERSE, 20.5, INCHES);\n    drivetrain.turn_for(RIGHT, 180, DEGREES);\n    drivetrain.drive_for(FORWARD, 23, INCHES);\n    drivetrain.turn_for(RIGHT, 90, DEGREES);\n    drivetrain.drive_for(FORWARD, 17, INCHES);\n    pusher_motor.spin_for(REVERSE, 1200, DEGREES);\n    drivetrain.drive_for(REVERSE, 15, INCHES);\n    drivetrain.turn_for(RIGHT, 90, DEGREES);\n    drivetrain.drive_for(FORWARD, 80, INCHES);\n    pusher_motor.spin_for(FORWARD, 1200, DEGREES);\n    pusher_motor.spin_for(REVERSE, 1200, DEGREES);\n    drivetrain.turn_for(RIGHT, 90, DEGREES);\n    drivetrain.drive_for(FORWARD, 18, INCHES)\n    drivetrain.turn_for(LEFT, 90, DEGREES);\n    drivetrain.drive_for(FORWARD, 12, INCHES);\n    drivetrain.turn_for(RIGHT, 90, DEGREES);\n    drivetrain.drive_for(FORWARD, 11, INCHES);\n    drivetrain.turn_for(LEFT, 90, DEGREES);\n    drivetrain.drive_for(FORWARD, 9, INCHES);\n    drivetrain.drive_for(REVERSE, 8, INCHES);\n    drivetrain.turn_for(LEFT, 90, DEGREES);\n    drivetrain.drive_for(FORWARD, 30, INCHES);\n    drivetrain.drive_for(REVERSE, 30, INCHES);\n    drivetrain.turn_for(RIGHT, 90, DEGREES);\n    drivetrain.drive_for(FORWARD, 16, INCHES);\n    pusher_motor.spin_for(FORWARD, 1200, DEGREES);\n    pusher_motor.spin_for(REVERSE, 1200, DEGREES);\n    drivetrain.drive_for(REVERSE, 16, INCHES);\n    drivetrain.turn_for(LEFT, 90, DEGREES);\n    drivetrain.drive_for(FORWARD, 36, INCHES);\n    drivetrain.turn_for(LEFT, 90, DEGREES);\n    drivetrain.drive_for(FORWARD, 10, INCHES);\n    drivetrain.drive_for(REVERSE, 10, INCHES);\n    drivetrain.turn_for(RIGHT, 90, DEGREES);\n    drivetrain.drive_for(REVERSE, 26, INCHES);\n    drivetrain.turn_for(RIGHT, 90, DEGREES);\n    drivetrain.drive_for(FORWARD, 16, INCHES);\n    pusher_motor.spin_for(FORWARD, 1200, DEGREES);\n    pusher_motor.spin_for(REVERSE, 1200, DEGREES);\n    drivetrain.drive_for(REVERSE, 16, INCHES);\n    drivetrain.turn_for(LEFT, 90, DEGREES);\n    drivetrain.drive_for(FORWARD, 36, INCHES);\n\n    Place_down_and_put_up_arm_motor()\n","textLanguage":"python","robotConfig":[{"port":[3],"name":"arm_motor","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1"}},{"port":[5],"name":"pusher_motor","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1"}},{"port":[1,2,0],"name":"drivetrain","customName":false,"deviceType":"Drivetrain","deviceClass":"smartdrive","setting":{"type":"2-motor","wheelSize":"wheel4in","gear":"ratio18_1","gearRatio":"1:1","direction":"fwd","gyroType":"none","width":"295","unit":"mm","wheelbase":"40","wheelbaseUnit":"mm","xOffset":"0","xOffsetUnit":"mm","yOffset":"0","yOffsetUnit":"mm","thetaOffset":"180"}}],"slot":0,"platform":"V5","sdkVersion":"20240802.15.00.00","appVersion":"4.0.7","fileFormat":"2.0.0","targetBrainGen":"First","v5Sounds":[{"name":"game over","url":"static/sounds/mixkit-arcade-retro-game-over-213.wav"}],"v5SoundsEnabled":false}